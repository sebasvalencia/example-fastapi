name: Build and Deploy Code

on: [push, pull_request]

# env:
#   DATABASE_HOSTNAME: localhost

jobs:
    job1:
        environment:
            name: testing
        env:
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          ALGORITHM: ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
        services:
          postgres:
            image: postgres
            env:
              POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
              POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
            ports:
              - 5432:5432
            # Set health checks to wait until postgres has started
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
        runs-on: ubuntu-latest
        steps:
          - name: pulling git repository
            uses: actions/checkout@v2
          - name: Install python version 3.12.5
            uses: actions/setup-python@v2
            with:
              python-version: "3.12.5"
          - name: update pip
            run: python -m pip install --upgrade pip
          - name: install all dependencies
            run: pip install -r requirements.txt
          - name: test with pytest
            run: |
              pip install pytest
              pytest
          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
              username: ${{ secrets.DOCKER_HUB_USERNAME }}
              password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          # - name: Set up Docker Buildx
          #   id: buildx
          #   uses: docker/setup-buildx-action@v1
          - name: Build and push
            id: docker_build
            uses: docker/build-push-action@v2
            with:
              context: ./
              file: ./Dockerfile
              tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-course:latest
              push: true
              cache-from: type=local,src=/tmp/.buildx-cache
              cache-to: type=local,dest=/tmp/.buildx-cache
          - name: Image digest
            run: echo ${{ steps.docker_build.outputs.digest }}


# on: [push, pull_request]
# on: 
#     push:
#         branches: #["main"] #["main", "other branches"]
#           - "main" 

